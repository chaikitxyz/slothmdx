---
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import PageLayout from "@/layouts/Base";
import { getAllPodcasts, sortPodcastByDate } from "@/utils";
import PodcastCard from "@/components/PodcastCard";
import Pagination from "@/components/Pagination";
import siteConfig  from "src/siteConfig.json";

export const getStaticPaths = (async ({ paginate }) => {
  const allPodcasts = await getAllPodcasts();
  const allPodcastsByDate = sortPodcastByDate(allPodcasts);
  return paginate(allPodcastsByDate, { pageSize: siteConfig.PODCASTS_PER_PAGE });
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page } = Astro.props;
---

<PageLayout meta={{ title: "Podcast" }}>
  <section>
    <h1 class="title mb-6">{siteConfig.podcast.title}</h1>
    <p class="mb-4">{siteConfig.podcast.subtitle}</p>
  </section>
  <section aria-label="Podcast list" class="mt-16">
    <div class="card min-w-full bg-base-100 shadow-md p-3 pb-3 mt-12">
      {
        page.data.map((episode, index) => (
          <PodcastCard
            title={episode.data.title}
            url={episode.data.audioUrl}
            audioUrl={episode.data.audioUrl}
            pubDate={episode.data.publishDate}
            duration={episode.data.duration}
            displayDate={episode.data.publishDate}
            slug={episode.slug}
            id={`card-${index}`}
          />
        ))
      }
    </div>
    {page.lastPage > 1 && (
    <Pagination
      length={page.lastPage}
      currentPage={page.currentPage}
      firstUrl="/podcast"
      prevUrl={page.url.prev}
      nextUrl={page.url.next}
    />
    )}
  </section>
</PageLayout>
